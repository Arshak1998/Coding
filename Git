 GitHub, Bitbucket,  GitLab. Arshak Stepanyan  
      	SRANQ CHGITEM GITTT    				 tag      remote 
  					
  chenger փոփոխություներ	 				
  commit  պարտավորվել				
  					
    

git pages      deploy 

 ---->
 
Թարգմանություն

Репозитории  պահոց
органозавать կազմակերպել
отслеживание հետևել
 
  ---->
  cd
  
 GIT
 ---->
 
 началные настройки
 ----cd
 git config --global user.name   Arsh 
 git config --global user.email arshami0098@mail.ru
 git config --global color.ui auto
 git config --list
 -------
 
 Основные команды GIT:
git init  Создать новый пустой репозиторий в текущей директории    
git init: Создание нового локального репозитория.                  	 սկիզբ		 ստեղծել սկզբից 
git clone: Клонирование удаленного репозитория на локальную машину.      կլոնավորում 		 Հեռավոր պահեստի կլոնավորում ձեր տեղական մեքենայի վրա:
git add .  Добавление изменений в индекс для следующего коммита.  	 ավելացնել		Ավելացրեք փոփոխություններ ինդեքսում հաջորդ commit-ի համար:
git commit: Сохранение изменений в локальном репозитории.		 պարտավորվել   	Պահպանեք փոփոխությունները տեղական պահեստում:
git push: Отправка изменений из локального репозитория в удаленный.	 ուղարկել		փոփոխությունների տեղափոխում տեղական պահոցից դեպի հեռավոր:
git pull: Получение изменений из удаленного репозитория в локальный.	 քաշել			Փոփոխությունները հեռավոր պահոցից դեպի տեղական:



------------------------------------------------------------------------------------------



՝ ուրեմն ամենասկզբից նայում ենք ինչ ունենք մեր կատալոգի մեջ			 ( ls )
՝ ու խոսքի ստեղծում ենք պապկա անունը					 {repo}  ( mkdir repo )
՝ տեսնում ենք բացվելա պապկեն թե ոչ  					( ls )
՝ մուտք ենք գործում տվյալ պապկա 						( cd repo )
՝ պահոցները կազմակերպվում են հետևյալ կամադայով 				( git init )
՝ ստեղծում ենք ֆայլ տվյալ պապկայի մեջ տվյալ կամադայով				 ( touch read.txt )
՝ մուտք ենք գործում տվյալ ստեղծված ֆայլը նայելու թե ինչ կա մեջը 			( nano read.txt )
՝ և մենք որոշում ենք հետևել քայլերին տվյալ ֆայլի այս հրամանի օգնությամբ	 ( git add read.txt ) 
՝ ուրեմն ուզում ենք վերջին տվյալները մցնենք բազայի մեջ հետևյալ կամանդով  	( git commit )
` սրանով նայում ենք թե քանի անգամա քոմիիթ եղել ու ինչ փոփոխություն 		 ( git log )
 commit 6ae6g52vsg46s8 									(hash xesh)
 Author: Arshh arshami0098@mail.ru							 ( git log )
 date : mon aug 23 10:52:84
 
 ----------
 ՝ ամեն փոփոխելուց հետո ամպայման պետքա լինի հետևելը ֆայլին ( git add read.txt )
 ՝ և հետո նոր փոփոխությունը հաստատելու համար բազայում գրում ենք ( git commit )
  -------------
  
` և սա կարելի գրել լրիվ մեկ կամանդայով հետևյալ կերպ ( git commit -am 'add x lines' ) x տողերի քանակնա

՝ ուրեմն բոլոր տարբերակներով աշխատումա օրինակ սենցել comiit-@ ( git commit -am 'add lines' ) { git commit -am 'add 5 lines'}

՝  ավելի կարճ տարբերակով commit-ները նայելու համար հետևյալ կամանդայով   ( git log --oneline )

` ուրեմն եթե ուզում ենք տվյալ տողի վրա անել փոփոխություններ պետքա օգտագործենք տվյալ կամանդը  ( git reset --hard  435a1g5aeg ) որից հետո  նոր մուտք ֆայլ ( nano read.txt )

` իսկ եթե  ուզում ենք  վերականգնել և նայել վերջին քոմմիթը կամ նախավերջինը , գրում ենք տվյալ հրամանը ( git reflog )

՝  իսկ եթեեե  լինումա սենց օրինակ ուզում ես քոմմիթը տենաս որը անցելա արդեն շուտվանից գրում ես հետևյալ հրամանը

--------------------------------------------------------------------------------------------------------------------------------------------

 թազա վիդյոյյով 3րդ

 ուրեմն պահոց  Репозитории սարքելու համար մտնում ենք գիթհաբ սարքում ենք , git, public,
 գալիս ենք տերմինալ  ssh-keygen -t rsa -b 4096
 
գրում ենք պապկի անունը որտեղ քցի  
ընտրել չնտրել գաղթնաբառը․․․ հարցերի վերջում  enter
բացում ենք մեջի եղածը ls .ssh
եթե ուզում ենք id_rsa.pub տեղափոխել գիտհաբ գրում ենք հետևյալ կամանդը cat .ssh/id_rsa.pub 
ու բերումա մեծ բանալի կոպի ենք անում տանում ենք գիտհաբ գցում ենք SSH and GPG keys պապկի միջի քեյի տեղը, մենակ ներքևի հավասարի աջ հատվածն ենք կոպիով քցում թայթլի տեղը ու (Add SSH Key) ենք սեղմում 
հետո մտնում ենք պահոցները, մտնում ենք սարքած git պահոցը ու ընտրում ենք HTTPS and SSH  ու կոպի ենք անում տողի միջինը ,ու գնում ենք տերմինալ
գրում ենք հրաման git clone  git@github.com:Arshak1998/git.git github <--- (պապկի անուննենք գրում ստեղ) որը թույլա տալիս կլոնավորել բոլոր թարմացումները մեր տերմինալի համակարգչի մեջ
հետո մտնում ենք ետ պապկա cd github 
բացում ենք միհատ ֆայլ  touch github.txt
հետո մտնում ենք մեջը ֆայլի  nano github.txt
գրում ենք երկու տող  ․․․ լուբոյ բաննն  սեյվ ենք անում դուրս ենք գալիս
դուրս ենք գալիս հետո քմմիթ ենք անում  git add github.txt    հետո գրում եմ git commit -am 'add 2 lines'
հետոն գրում ենք   git status   որ տենանք ինչ կա մեջը  
հետո նայում ենք մեջի իստորիան մի տողով git log --oneline
այսինքն տեսնում ենք որ  ունենք մի քմմիթ ու ետ պետքա ավելացնենք այդ թարմացումը թազա գրածը գիթհաբի մեր էջում , հետևյալ հրամանով ( git push ) 
և գիթի մեր էջում ստուգում ենք որ թարմացումը հաջողությամբ եղելա ավելացելա github.txt-ի 2 տողերըը 
և եթե ուզում ենք անենք հակառակը , մուտքագրում ենք էլի տողեր հենց գիթում այսինքն հլը որ չունենք թարմացումը մերրր համակարգչի մեջ ուրեմն դրա համար գրում եմ գիթի ֆայլի մեջ տվյալ տեքստը և մեր համակարգչի մեջ կամանդայով գրում ենննք git pull  փոփոխությունը հաստատված է բարեհաջող համակարգչի մեջ  
և կարող ենք նայել ամեն դեպքում ֆայլի պարունակությունը հետևյալ կամանդայով  nano github.txt


-------------------------------------------------------------------------------------------


git diff file-i anun ----   cuyca talis fayli local changer@ sqn toxi popoxutyunner@
git branch            ---- cuyca talis local brencher@  (* main) cyux 
git checkout -b name_branch  ---   sarquma taza branch (cyux)
git branch -D Arshh  ---  branch@ jnjel@ 
git checkout name_branch  --- texapoxvum enq myus branchi vra 
git push origin main ---  pusha anum (main) branchi vra 
git push  ---- pusha anum tvyal  brenchi vra vortex mtaca
git commit -m "fixed conflicts" ---   piti lini senc commit@ vor ereva incha arac vren -m (message)-na "message"
git pull origin main --no-ff    ----  sudo-i nman syntax vor pull@ chlinelu depqum tuyl kta --no-ff sra ognuytamb qashes commitner@ 
git checkout -f Linux esi jnjuma chenger@
git add PHP ----  irar hakarak en ---  git reset PHP  
git fetch   ---- uremn  pulli ujex dzevna hamel qashuma branch-er@ urish serveric
isk stugelu hamar mtnum enq tvyal branch-@ nor tarmacnuma  
git  stash  file_name  ----- pahoca gitum vor pahuma hin fayl@ popoxelu kam chenger@ het berelu hamar BAYC CHOGTAGORCVOX
git rebase --- eli xuchuch comanda erku brancher miavorelu hamar kam commitner@ veradasavorelu hamar 
git merge origin name_branch ---- ibr kpcnuma miancuma joina anum irar myus branchi chenger@

                  

















